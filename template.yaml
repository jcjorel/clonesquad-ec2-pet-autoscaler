AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CloneSquad deployment

Globals:
  Function:
    Timeout: 300

Parameters: 
  GroupName: 
    Type: String
    ConstraintDescription: "[A-Za-z0-9][-A-Za-z0-9]+"
    MaxLength: 40
    MinLength: 2
    Description: "CloneSquad group name. This is used to look for resources tagged with 'clonesquad:group-name' tag in the current account and region."

  CustomizationZipParameters:
    Type: String
    Default: ""
    Description: "(Optional) Path to a ZIP file located in S3 expressed with the special format '<S3_bucket_name>:<S3_key_path>'."

  ConfigurationURLs: 
    Type: String
    ConstraintDescription: "[?-/:A-Za-z0-9]*"
    Default: ""
    Description: "(Optional) Semicolon separated list of URLs targeting YAML files where to read configuration in sequence."

  LambdaMemorySize:
    Type: Number
    Default: 512
    Description: "(Optional) Memory size to allocate to Main and Interact Lambda functions."

  LogRetentionDuration:
    Type: Number
    Default: 14
    Description: "(Optional) Cloudwatch Logs retention duration (in Days)."

  UserNotificationArns: 
    Type: String
    ConstraintDescription: "[-/:A-Za-z0-9]*"
    Default: ""
    Description: "(Optional) Comma seperated list of user provided ARNs (Lambda, SQS, SNS) to receive real-time notifications (TargetGroup Register/Deregister events, instances start/stop...)"

  LoggingS3Path:
    Type: String
    Default: ""
    Description: "(Optional) S3 Path for detailed logging (s3://<bucket_name>/<path>)"

  ApiGWConfiguration:
    Type: String
    Default: ""
    Description: "(Optional) API Gateway configuration."

  ApiGWEndpointConfiguration:
    Type: String
    Default: ""
    Description: "(Optional) API Gateway VPC endpoint configuration."

  DynamoDBConfiguration:
    Type: String
    Default: ""
    Description: "(Optional) DynamodDB configuration. Format: Comma separated list of <TableName>=<ReadCapacityUnits>:<WriteCapacityUnits>"

  XRayDiagnosis:
    Type: String
    Default: 1
    ConstraintDescription: "[0|1]"
    Description: "(Debug) Trace CloneSquad to get visibility into execution time and associated costs"

Conditions:
    HasCustomizationZipParameters: !Not [ !Equals [ !Ref CustomizationZipParameters, ""]]
    HasApiGWEndpointConfiguration: !Not [ !Equals [ !Ref ApiGWEndpointConfiguration, ""]]


Resources:
    MainQueue:
      Type: AWS::SQS::Queue
      Properties: 
        MessageRetentionPeriod: 120
        QueueName: !Sub "CloneSquad-Main-${GroupName}"
        ReceiveMessageWaitTimeSeconds: 10
        VisibilityTimeout: 300
        Tags: 
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    MainSQSPolicy: 
      Type: AWS::SQS::QueuePolicy
      Properties: 
        Queues: 
          - !Ref MainQueue
        PolicyDocument: 
          Statement: 
            - Sid: "CloneSquad-Service-SendMessage-SQS-policy"
              Action: 
                - "sqs:SendMessage" 
              Effect: "Allow"
              Resource: !GetAtt MainQueue.Arn
              Principal:
                 Service: 
                 - events.amazonaws.com
                 - ec2.amazonaws.com
            - Sid: "CloneSquad-SendMessage-SQS-policy"
              Action: 
                - "sqs:SendMessage" 
              Effect: "Allow"
              Resource: !GetAtt MainQueue.Arn
              Condition:  
                ArnLike: 
                  aws:SourceArn:
                  - !GetAtt MainFunction.Arn
                  - !GetAtt SNSMgrFunction.Arn
            - Sid: "CloneSquad-Main-SQS-policy"
              Action: 
                - "sqs:*" 
              Effect: "Allow"
              Resource: !GetAtt MainQueue.Arn
              Condition:  
                ArnLike: 
                  aws:SourceArn:
                  - !GetAtt MainFunction.Arn

    DynamoDBParameters:
            Type: "Custom::CustomResourceFunction"
            Properties:
              ServiceToken: !GetAtt CustomResourceFunction.Arn
              Helper: DynamoDBParameters
              AccountId: !Ref AWS::AccountId
              Region: !Ref AWS::Region
              DynamoDBConfiguration: !Ref DynamoDBConfiguration

    ConfigTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: !Sub "CloneSquad-${GroupName}-Configuration"
        AttributeDefinitions: 
          - 
            AttributeName: "Key"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "Key"
            KeyType: "HASH"
        TimeToLiveSpecification:
          AttributeName: ExpirationTime
          Enabled: True
        BillingMode: !GetAtt DynamoDBParameters.ConfigTable.BillingMode
        ProvisionedThroughput: !GetAtt DynamoDBParameters.ConfigTable.ProvisionedThroughput
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        Tags: 
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    AlarmStateEC2Table: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: !Sub "CloneSquad-${GroupName}-AlarmState-EC2"
        AttributeDefinitions: 
          - 
            AttributeName: "AlarmName"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "AlarmName"
            KeyType: "HASH"
        TimeToLiveSpecification:
          AttributeName: ExpirationTime
          Enabled: True
        BillingMode: !GetAtt DynamoDBParameters.AlarmStateEC2Table.BillingMode
        ProvisionedThroughput: !GetAtt DynamoDBParameters.AlarmStateEC2Table.ProvisionedThroughput
        Tags: 
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    StateTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: !Sub "CloneSquad-${GroupName}-State"
        AttributeDefinitions: 
          - 
            AttributeName: "Key"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "Key"
            KeyType: "HASH"
        TimeToLiveSpecification:
          AttributeName: ExpirationTime
          Enabled: True
        BillingMode: !GetAtt DynamoDBParameters.StateTable.BillingMode
        ProvisionedThroughput: !GetAtt DynamoDBParameters.StateTable.ProvisionedThroughput
        Tags: 
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    EventTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: !Sub "CloneSquad-${GroupName}-EventLog"
        AttributeDefinitions: 
          - 
            AttributeName: "EventDate"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "EventDate"
            KeyType: "HASH"
        TimeToLiveSpecification:
          AttributeName: ExpirationTime
          Enabled: True
        BillingMode: !GetAtt DynamoDBParameters.EventTable.BillingMode
        ProvisionedThroughput: !GetAtt DynamoDBParameters.EventTable.ProvisionedThroughput
        Tags: 
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    LongTermEventTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: !Sub "CloneSquad-${GroupName}-EventLog-LongTerm"
        AttributeDefinitions: 
          - 
            AttributeName: "EventDate"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "EventDate"
            KeyType: "HASH"
        TimeToLiveSpecification:
          AttributeName: ExpirationTime
          Enabled: True
        BillingMode: !GetAtt DynamoDBParameters.LongTermEventTable.BillingMode
        ProvisionedThroughput: !GetAtt DynamoDBParameters.LongTermEventTable.ProvisionedThroughput
        Tags: 
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    SchedulerTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: !Sub "CloneSquad-${GroupName}-Scheduler"
        AttributeDefinitions: 
          - 
            AttributeName: "Key"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "Key"
            KeyType: "HASH"
        TimeToLiveSpecification:
          AttributeName: ExpirationTime
          Enabled: True
        BillingMode: !GetAtt DynamoDBParameters.SchedulerTable.BillingMode
        ProvisionedThroughput: !GetAtt DynamoDBParameters.SchedulerTable.ProvisionedThroughput
        Tags: 
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    EC2SpotEventRule:
      Type: AWS::Events::Rule
      Properties:
        Description: Events rule for Spot Instance Interruption Notices
        Name: !Sub "CloneSquad-EC2Spot-Notif-${GroupName}"
        Targets:
          - Arn: !GetAtt MainQueue.Arn
            Id: !GetAtt MainQueue.QueueName
        EventPattern:
          detail-type:
          - EC2 Spot Instance Interruption Warning
          - EC2 Instance Rebalance Recommendation
          source:
          - aws.ec2
        State: ENABLED

    CloudWatchEventRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: !Sub "CloneSquad-${GroupName}-CWRole"
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                - events.amazonaws.com
              Action:
                - 'sts:AssumeRole'        

    ERRORMetricFilter:
        Type: AWS::Logs::MetricFilter
        DependsOn: MainFunctionLogGroup
        Properties:
          FilterPattern: '"[ERROR]"'
          LogGroupName: !Sub "/aws/lambda/CloneSquad-Main-${GroupName}"
          MetricTransformations:
            - DefaultValue: 0
              MetricValue: 1
              MetricName: !Sub "InternalErrors.Main.${GroupName}"
              MetricNamespace: CloneSquad

    ERRORInteractMetricFilter:
        Type: AWS::Logs::MetricFilter
        DependsOn: InteractFunctionLogGroup
        Properties:
          FilterPattern: '"[ERROR]"'
          LogGroupName: !Sub "/aws/lambda/CloneSquad-Interact-${GroupName}"
          MetricTransformations:
            - DefaultValue: 0
              MetricValue: 1
              MetricName: !Sub "InternalErrors.Interact.${GroupName}"
              MetricNamespace: CloneSquad

    WARNINGMetricFilter:
        Type: AWS::Logs::MetricFilter
        DependsOn: MainFunctionLogGroup
        Properties:
          FilterPattern: '"[WARNING]"'
          LogGroupName: !Sub "/aws/lambda/CloneSquad-Main-${GroupName}"
          MetricTransformations:
            - DefaultValue: 0
              MetricValue: 1
              MetricName: !Sub "InternalWarnings.Main.${GroupName}"
              MetricNamespace: CloneSquad

    WARNINGInteractMetricFilter:
        Type: AWS::Logs::MetricFilter
        DependsOn: InteractFunctionLogGroup
        Properties:
          FilterPattern: '"[WARNING]"'
          LogGroupName: !Sub "/aws/lambda/CloneSquad-Interact-${GroupName}"
          MetricTransformations:
            - DefaultValue: 0
              MetricValue: 1
              MetricName: !Sub "InternalWarnings.Interact.${GroupName}"
              MetricNamespace: CloneSquad

    InternalERRORMainAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties: 
          ActionsEnabled: True
          AlarmDescription: "Alarm to catch CloudSquad Internal errors (ex: Misconfiguration, bugs...) - MAIN function"
          AlarmName: !Sub "CloneSquad-${GroupName}-InternalERRORs.Main"
          ComparisonOperator: GreaterThanThreshold
          DatapointsToAlarm: 1
          EvaluationPeriods: 2
          MetricName: !Sub "InternalErrors.Main.${GroupName}"
          Namespace: CloneSquad
          Period: 60
          Statistic: Sum
          Threshold: 0

    InternalWARNINGMainAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties: 
          ActionsEnabled: True
          AlarmDescription: "Alarm to catch CloudSquad Internal warnings (ex: Misconfiguration, bugs...) - MAIN function"
          AlarmName: !Sub "CloneSquad-${GroupName}-InternalWARNINGs.Main"
          ComparisonOperator: GreaterThanThreshold
          DatapointsToAlarm: 1
          EvaluationPeriods: 2
          MetricName: !Sub "InternalWarnings.Main.${GroupName}"
          Namespace: CloneSquad
          Period: 60
          Statistic: Sum
          Threshold: 0

    InternalERRORInteractAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties: 
          ActionsEnabled: True
          AlarmDescription: "Alarm to catch CloudSquad Internal errors (ex: Misconfiguration, bugs...) - INTERACT function"
          AlarmName: !Sub "CloneSquad-${GroupName}-InternalERRORs.Interact"
          ComparisonOperator: GreaterThanThreshold
          DatapointsToAlarm: 1
          EvaluationPeriods: 2
          MetricName: !Sub "InternalErrors.Interact.${GroupName}"
          Namespace: CloneSquad
          Period: 60
          Statistic: Sum
          Threshold: 0

    InternalWARNINGInteractAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties: 
          ActionsEnabled: True
          AlarmDescription: "Alarm to catch CloudSquad Internal warnings (ex: Misconfiguration, bugs...) - INTERACT function"
          AlarmName: !Sub "CloneSquad-${GroupName}-InternalWARNINGs.Interact"
          ComparisonOperator: GreaterThanThreshold
          DatapointsToAlarm: 1
          EvaluationPeriods: 2
          MetricName: !Sub "InternalWarnings.Interact.${GroupName}"
          Namespace: CloneSquad
          Period: 60
          Statistic: Sum
          Threshold: 0

    LackOfCPUCreditAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties: 
          ActionsEnabled: True
          AlarmDescription: "Alarm to catch burstable instance that exhausted their CPU credits"
          AlarmName: !Sub "CloneSquad-${GroupName}-LackOfCPUCreditAlarm"
          ComparisonOperator: GreaterThanThreshold
          DatapointsToAlarm: 2
          EvaluationPeriods: 2
          MetricName: "NbOfCPUCreditExhaustedInstances"
          Dimensions:
            - Name: GroupName
              Value: !Sub "${GroupName}"
          Namespace: CloneSquad
          Period: 60
          Statistic: Average
          Threshold: 0

    SNSScaleUp:
        Type: AWS::SNS::Topic
        Properties: 
          TopicName: !Sub "CloneSquad-CloudWatchAlarm-ScaleUp-${GroupName}"
          Tags:
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    SNSOk:
        Type: AWS::SNS::Topic
        Properties: 
          TopicName: !Sub "CloneSquad-CloudWatchAlarm-Ok-${GroupName}"
          Tags:
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    SNSInsufficientData:
        Type: AWS::SNS::Topic
        Properties: 
          TopicName: !Sub "CloneSquad-CloudWatchAlarm-InsufficientData-${GroupName}"
          Tags:
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    CloneSquadDependencyLayer:
            Type: AWS::Serverless::LayerVersion
            Properties:
              LayerName: !Sub "CloneSquad-Dependencies-Layer-${GroupName}"
              Description: "Binary dependency artifact for 'Main' CloneSquad layer"
              ContentUri: .venv/lib/python3.7/
              CompatibleRuntimes:
                  - python3.7


    CloneSquadLayer:
            Type: AWS::Serverless::LayerVersion
            Properties:
              LayerName: !Sub "CloneSquad-Layer-${GroupName}"
              Description: "Binary artifact for CloneSquad functions"
              ContentUri: src/
              CompatibleRuntimes:
                  - python3.7
              LicenseInfo: 'MIT'

    MainFunctionLogGroup:
            Type: "AWS::Logs::LogGroup"
            Properties:
              LogGroupName: !Sub "/aws/lambda/CloneSquad-Main-${GroupName}"
              RetentionInDays: !Ref LogRetentionDuration

    InteractFunctionLogGroup:
            Type: "AWS::Logs::LogGroup"
            Properties:
              LogGroupName: !Sub "/aws/lambda/CloneSquad-Interact-${GroupName}"
              RetentionInDays: !Ref LogRetentionDuration

    SNSMgrFunctionLogGroup:
            Type: "AWS::Logs::LogGroup"
            Properties:
              LogGroupName: !Sub "/aws/lambda/CloneSquad-SNSMgr-${GroupName}"
              RetentionInDays: !Ref LogRetentionDuration

    SNSDiscoveryFunctionLogGroup:
            Type: "AWS::Logs::LogGroup"
            Properties:
              LogGroupName: !Sub "/aws/lambda/CloneSquad-Discovery-${GroupName}"
              RetentionInDays: !Ref LogRetentionDuration

    CustomResourceFunction:
            Type: AWS::Serverless::Function 
            Properties:
              Handler: customresource.handler
              Runtime: python3.7
              CodeUri: custo/
              Layers:
                  - !Ref CloneSquadLayer
                  - !Ref CloneSquadDependencyLayer
              FunctionName: !Sub "CloneSquad-CustomResource-${GroupName}"
              MemorySize: 128
              Timeout: 60
              Policies:
              - AdministratorAccess
              Environment:
                Variables:
                  PYTHONPATH:                                 "/opt:/opt/site-packages"

    ApiGWParameters:
            Type: "Custom::CustomResourceFunction"
            Properties:
              ServiceToken: !GetAtt CustomResourceFunction.Arn
              Helper: ApiGWParameters
              AccountId: !Ref AWS::AccountId
              Region: !Ref AWS::Region
              ApiGWConfiguration: !Ref ApiGWConfiguration
              ApiGWEndpointConfiguration: !Ref ApiGWEndpointConfiguration
              DefaultGWPolicyURL: "internal:api-gw-default-policy.json"

    InteractApi:
            Type: AWS::Serverless::Api
            Properties:
              StageName: v1
              Name: !Sub "CloneSquad-${GroupName}"
              EndpointConfiguration: REGIONAL
              Auth:
                   DefaultAuthorizer: AWS_IAM
                   ResourcePolicy:
                      CustomStatements: !GetAtt ApiGWParameters.GWPolicy
              EndpointConfiguration:
                Type: !GetAtt ApiGWParameters.EndpointConfiguration.Type
            Tags:
            - Key: "clonesquad:group-name"
              Value: !Ref GroupName

    ApiGWVpcEndpointParameters:
            Type: "Custom::CustomResourceFunction"
            Condition: HasApiGWEndpointConfiguration
            Properties:
              ServiceToken: !GetAtt CustomResourceFunction.Arn
              Helper: ApiGWVpcEndpointParameters
              AccountId: !Ref AWS::AccountId
              Region: !Ref AWS::Region
              ApiGWConfiguration: !Ref ApiGWConfiguration
              ApiGWEndpointConfiguration: !Ref ApiGWEndpointConfiguration
              ApiGWId: !Ref InteractApi
              DefaultGWVpcEndpointPolicyURL: "internal:api-gw-default-endpoint-policy.json"

    ApiGWVpcEndpoints:
        Type: AWS::EC2::VPCEndpoint
        Condition: HasApiGWEndpointConfiguration
        Properties: 
          PolicyDocument: !GetAtt ApiGWVpcEndpointParameters.PolicyDocument
          PrivateDnsEnabled: !GetAtt ApiGWVpcEndpointParameters.PrivateDnsEnabled
          SecurityGroupIds: 
            - !Ref ApiGWEndpointSecurityGroup
          ServiceName: !Sub "com.amazonaws.${AWS::Region}.execute-api"
          SubnetIds: !GetAtt ApiGWVpcEndpointParameters.SubnetIds
          VpcEndpointType: Interface
          VpcId: !GetAtt ApiGWVpcEndpointParameters.VpcId

    ApiGWEndpointSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Condition: HasApiGWEndpointConfiguration
        Properties:
          GroupDescription: !Sub "${AWS::StackName} - Security Group for CloneSquad API GW"
          SecurityGroupEgress:
          - IpProtocol: -1
            FromPort: -1
            ToPort: -1
            CidrIp: 0.0.0.0/0
          SecurityGroupIngress: !GetAtt ApiGWVpcEndpointParameters.SecurityGroupIngressRule
          VpcId: !GetAtt ApiGWVpcEndpointParameters.VpcId
          Tags:
          - Key: Name
            Value: !Join ['', [!Ref "AWS::StackName", "-APIGWEndpointSecurityGroup" ]]
          

    MainFunction:
            Type: AWS::Serverless::Function 
            DependsOn: MainFunctionLogGroup
            Properties:
              Handler: app.main_handler
              Runtime: python3.7
              CodeUri: custo/
              Layers:
                  - !Ref CloneSquadLayer
                  - !Ref CloneSquadDependencyLayer
              FunctionName: !Sub "CloneSquad-Main-${GroupName}"
              MemorySize: !Ref LambdaMemorySize
              Timeout: 300
              ReservedConcurrentExecutions: 1
              Tracing: Active
              Policies:
              - AdministratorAccess
              Environment:
                Variables:
                  PYTHONPATH:                                 "/opt:/opt/site-packages"
                  MainSQSQueue:                               !Ref MainQueue
                  UserNotificationArns:                       !Ref UserNotificationArns
                  InteractLambdaArn:                          !GetAtt InteractFunction.Arn
                  InteractSQSUrl:                             !Ref InteractQueue
                  GroupName:                                  !Ref GroupName
                  GenericOkActions_SNSTopicArn:               !Ref SNSOk
                  ScaleUp_SNSTopicArn:                        !Ref SNSScaleUp
                  GenericInsufficientDataActions_SNSTopicArn: !Ref SNSInsufficientData
                  CloudWatchEventRoleArn:                     !GetAtt CloudWatchEventRole.Arn
                  ConfigurationTable:                         !Ref ConfigTable
                  AlarmStateEC2Table:                         !Ref AlarmStateEC2Table
                  StateTable:                                 !Ref StateTable
                  EventTable:                                 !Ref EventTable
                  SchedulerTable:                             !Ref SchedulerTable
                  LongTermEventTable:                         !Ref LongTermEventTable
                  ConfigurationURLs:                          !Ref ConfigurationURLs
                  LoggingS3Path:                              !Ref LoggingS3Path
                  AWS_XRAY_SDK_ENABLED:                       !Ref XRayDiagnosis
              Events:
                Schedule:
                  Type: Schedule
                  Properties:
                    Description: "Schedule event for CloneSquad HeartBeat"
                    Name: !Sub "CS-hb-rule-${GroupName}"
                    Enabled: True
                    Schedule: "rate(1 minute)"
                SQS:
                  Type: SQS
                  Properties:
                    Queue: !GetAtt MainQueue.Arn
                    BatchSize: 10

    PermissionForSchedulerEvents:
            Type: AWS::Lambda::Permission
            Properties: 
                Action: "lambda:InvokeFunction"
                FunctionName: !Ref MainFunction
                Principal: "events.amazonaws.com"
                SourceArn: !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/CS-hb-rule-${GroupName}-*"


    SNSMgrFunction:
            Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
            DependsOn: SNSMgrFunctionLogGroup
            Properties:
              Handler: app.sns_handler
              Runtime: python3.7
              CodeUri: custo/
              Layers:
                  - !Ref CloneSquadLayer
                  - !Ref CloneSquadDependencyLayer
              FunctionName: !Sub "CloneSquad-SNSMgr-${GroupName}"
              MemorySize: 256
              Timeout: 60
              Policies:
              - AdministratorAccess
              Environment:
                Variables:
                  PYTHONPATH:                                 "/opt:/opt/site-packages"
                  MainSQSQueue:                               !Ref MainQueue
                  GroupName:                                  !Ref GroupName
                  GenericOkActions_SNSTopicArn:               !Ref SNSOk
                  ScaleUp_SNSTopicArn:                        !Ref SNSScaleUp
                  GenericInsufficientDataActions_SNSTopicArn: !Ref SNSInsufficientData
                  ConfigurationTable:                         !Ref ConfigTable
                  AlarmStateEC2Table:                         !Ref AlarmStateEC2Table
                  StateTable:                                 !Ref StateTable
                  EventTable:                                 !Ref EventTable
                  ConfigurationURLs:                          !Ref ConfigurationURLs
              Events:
                ScaleUpTopic:
                  Type: SNS
                  Properties:
                    Topic: !Ref SNSScaleUp
                OkTopic:
                  Type: SNS
                  Properties:
                    Topic: !Ref SNSOk
                InsufficientDataTopic:
                  Type: SNS
                  Properties:
                    Topic: !Ref SNSInsufficientData
                ConfigStream:
                  Type: DynamoDB
                  Properties:
                    Stream: !GetAtt ConfigTable.StreamArn
                    BatchSize: 100
                    StartingPosition: TRIM_HORIZON

    DiscoveryFunction:
            Type: AWS::Serverless::Function 
            DependsOn: SNSDiscoveryFunctionLogGroup
            Properties:
              Handler: app.discovery_handler
              Runtime: python3.7
              CodeUri: custo/
              Layers:
                  - !Ref CloneSquadLayer
                  - !Ref CloneSquadDependencyLayer
              FunctionName: !Sub "CloneSquad-Discovery-${GroupName}"
              MemorySize: 128
              Environment:
                Variables:
                  PYTHONPATH:                                 "/opt:/opt/site-packages"
                  GroupName:                                  !Ref GroupName
                  GenericOkActions_SNSTopicArn:               !Ref SNSOk
                  ScaleUp_SNSTopicArn:                        !Ref SNSScaleUp
                  GenericInsufficientDataActions_SNSTopicArn: !Ref SNSInsufficientData
                  ConfigurationTable:                         !Ref ConfigTable
                  AlarmStateEC2Table:                         !Ref AlarmStateEC2Table
                  StateTable:                                 !Ref StateTable
                  EventTable:                                 !Ref EventTable
                  LongTermEventTable:                         !Ref LongTermEventTable
                  SchedulerTable:                             !Ref SchedulerTable
                  ConfigurationURLs:                          !Ref ConfigurationURLs
                  LoggingS3Path:                              !Ref LoggingS3Path
                  InteractQueue:                              !Ref InteractQueue
                  InteractAPIGWUrl:                           !Sub "https://${InteractApi}.execute-api.${AWS::Region}.amazonaws.com/v1/"
                  MainFunctionArn:                            !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloneSquad-Main-${GroupName}"
                  InteractApi:                                !Ref InteractApi
                  ApiGwVpcEndpointDNSEntry: !If 
                        - HasApiGWEndpointConfiguration 
                        - !Select [ 1, !Split [ ":", !Select [ 0, !GetAtt ApiGWVpcEndpoints.DnsEntries]]]
                        - !GetAtt ApiGWParameters.VpcEndpointDNS

    InteractFunction:
            Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
            DependsOn: InteractFunctionLogGroup
            Properties:
              Handler: app.interact_handler
              Runtime: python3.7
              CodeUri: custo/
              Layers:
                  - !Ref CloneSquadLayer
                  - !Ref CloneSquadDependencyLayer
              FunctionName: !Sub "CloneSquad-Interact-${GroupName}"
              MemorySize: !Ref LambdaMemorySize
              Timeout: 900
              Policies:
              - AdministratorAccess
              Environment:
                Variables:
                  PYTHONPATH:         "/opt:/opt/site-packages"
                  GroupName:          !Ref GroupName
                  MainSQSQueue:       !Ref MainQueue
                  GenericOkActions_SNSTopicArn: !Ref SNSOk
                  ScaleUp_SNSTopicArn: !Ref SNSScaleUp
                  GenericInsufficientDataActions_SNSTopicArn: !Ref SNSInsufficientData
                  ConfigurationTable: !Ref ConfigTable
                  AlarmStateEC2Table: !Ref AlarmStateEC2Table
                  StateTable:         !Ref StateTable
                  EventTable:         !Ref EventTable
                  LongTermEventTable: !Ref LongTermEventTable
                  SchedulerTable:     !Ref SchedulerTable
                  ConfigurationURLs:  !Ref ConfigurationURLs
                  LoggingS3Path:      !Ref LoggingS3Path
                  InteractQueue:      !Ref InteractQueue
                  MainFunctionArn:    !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:CloneSquad-Main-${GroupName}"
              Events:
                SQS:
                  Type: SQS
                  Properties:
                    Queue: !GetAtt InteractQueue.Arn
                    BatchSize: 10
                ApiEventCommandGETRoot:
                  Type: Api
                  Properties:
                    RestApiId: !Ref InteractApi
                    Path: "/"
                    Method: get
                    Auth: 
                        InvokeRole: NONE
                ApiEventCommandGET:
                  Type: Api
                  Properties:
                    RestApiId: !Ref InteractApi
                    Path: "/{proxy+}"
                    Method: get
                    Auth: 
                        InvokeRole: NONE
                ApiEventCommandPOST:
                  Type: Api
                  Properties:
                    RestApiId: !Ref InteractApi
                    Path: "/{proxy+}"
                    Method: post
                    Auth: 
                        InvokeRole: NONE

    InteractQueue:
      Type: AWS::SQS::Queue
      Properties: 
        MessageRetentionPeriod: 3600
        QueueName: !Sub "CloneSquad-Interact-${GroupName}"
        ReceiveMessageWaitTimeSeconds: 20
        VisibilityTimeout: 900
        Tags: 
          - Key: "clonesquad:group-name"
            Value: !Ref GroupName

    InteractQueueSQSPolicy: 
      Type: AWS::SQS::QueuePolicy
      Properties: 
        Queues: 
          - !Ref InteractQueue
        PolicyDocument: 
          Statement: 
            - Sid: "CloneSquad-User-Interact-SQS-policy"
              Action: 
                - "SQS:SendMessage" 
              Effect: "Allow"
              Resource: !GetAtt InteractQueue.Arn
              Condition:  
                ArnLike: 
                  aws:SourceArn: !Split [",", !Sub "${UserNotificationArns}" ]
            - Sid: "CloneSquad-Interact-SQS-policy"
              Action: 
                - "sqs:*" 
              Effect: "Allow"
              Resource: !GetAtt InteractQueue.Arn
              Condition:  
                ArnLike: 
                  aws:SourceArn: !GetAtt InteractFunction.Arn

    PermissionForSchedulerEvents:
            Type: AWS::Lambda::Permission
            Properties: 
                Action: "lambda:InvokeFunction"
                FunctionName: !Ref InteractFunction
                Principal: "events.amazonaws.com"
                SourceArn: !Sub "arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/CS-Cron-${GroupName}-*"

Outputs:
  MainFunction:
    Description: "MainFunction Lambda Function ARN"
    Value: !GetAtt MainFunction.Arn
  InteractFunction:
    Description: "InteractFunction Lambda Function ARN"
    Value: !GetAtt InteractFunction.Arn
  CloneSquadLayer:
    Description: "CloneSquad Lambda layer (available for customization)"
    Value: !Ref CloneSquadLayer
  CloneSquadDependencyLayer:
    Description: "CloneSquad Lambda layer (dependencies)"
    Value: !Ref CloneSquadDependencyLayer
  MainFunctionIamRole:
    Description: "Implicit IAM Role created for MainRole function"
    Value: !GetAtt MainFunctionRole.Arn
  InternalERRORMainAlarm:
    Description: "Alarm that triggers when an ERROR is encountered by Main Lambda function"
    Value: !GetAtt InternalERRORMainAlarm.Arn
  InternalWARNINGMainAlarm:
    Description: "Alarm that triggers when a WARNING is encountered by Main Lambda function"
    Value: !GetAtt InternalWARNINGMainAlarm.Arn
  InternalERRORInteractAlarm:
    Description: "Alarm that triggers when an ERROR is encountered by Interact Lambda function"
    Value: !GetAtt InternalERRORInteractAlarm.Arn
  InternalWARNINGInteractAlarm:
    Description: "Alarm that triggers when a WARNING is encountered by Interact Lambda function"
    Value: !GetAtt InternalWARNINGInteractAlarm.Arn
  LackOfCPUCreditAlarm:
    Description: "Alarm that triggers when at least one burstable instance has exhausted all its CPU credits"
    Value: !GetAtt LackOfCPUCreditAlarm.Arn
  ConfigTable:
    Description: "Configuration table"
    Value: !GetAtt ConfigTable.Arn
  LongTermEventTable:
    Description: "Logging table of noticeable events (requiring analysis)"
    Value: !GetAtt LongTermEventTable.Arn
  InteractQueue:
    Description: "Queue for asynchronous calls with Interact Lambda function"
    Value: !Ref InteractQueue
  GroupName:
    Description: "Group name for this CloneSquad deployment"
    Value: !Ref GroupName
  InteractAPIUrl:
    Description: "Interact API Gateway URL"
    Value: !Sub "https://${InteractApi}.execute-api.${AWS::Region}.amazonaws.com/v1/"
